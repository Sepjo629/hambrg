{"version":3,"sources":["images/dallas.webp","images/austin.webp","images/newyork.webp","images/sanfrancisco.webp","images/beijing.webp","components/Hamburger.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","cities","name","image","dallas","austin","newyork","sanfrancisco","beijing","Hamburger","state","menu","useRef","revealMenu","revealMenuBackground","cityBackground","line1","line2","line3","info","useEffect","clicked","gsap","to","duration","height","ease","stagger","amount","css","display","initial","opacity","staggerReveal","fadeInUp","staggerText","node1","node2","from","transformOrigin","skewY","node3","y","delay","node","handleCityReturn","handleHover","e","target","skewX","handleHoverExit","ref","el","className","onMouseEnter","onMouseOut","map","key","city","background","withRouter","history","useState","menuName","setState","disabled","setDisabled","listen","disabledMenu","setTimeout","onClick","Opportunities","Solutions","Contact","Home","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ece45f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dallas.2bc38187.webp\";","module.exports = __webpack_public_path__ + \"static/media/austin.a7aadf33.webp\";","module.exports = __webpack_public_path__ + \"static/media/newyork.ebb81965.webp\";","module.exports = __webpack_public_path__ + \"static/media/sanfrancisco.b58ad59e.webp\";","module.exports = __webpack_public_path__ + \"static/media/beijing.209dcd10.webp\";","import React, { useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport gsap from \"gsap\";\n\n//import background images\nimport dallas from \"../images/dallas.webp\";\nimport austin from \"../images/austin.webp\";\nimport newyork from \"../images/newyork.webp\";\nimport sanfrancisco from \"../images/sanfrancisco.webp\";\nimport beijing from \"../images/beijing.webp\";\n\nconst cities = [\n  { name: \"Dallas\", image: dallas },\n  { name: \"Austin\", image: austin },\n  { name: \"New York\", image: newyork },\n  { name: \"San Francisco\", image: sanfrancisco },\n  { name: \"Beijing\", image: beijing },\n];\n\nconst Hamburger = ({ state }) => {\n  // Vars for our animated dom nodes\n  let menu = useRef(null);\n  let revealMenu = useRef(null);\n  let revealMenuBackground = useRef(null);\n  let cityBackground = useRef(null);\n  let line1 = useRef(null);\n  let line2 = useRef(null);\n  let line3 = useRef(null);\n  let info = useRef(null);\n\n  useEffect(() => {\n    if (state.clicked === false) {\n      // close our menu\n      gsap.to([revealMenu, revealMenuBackground], {\n        duration: 0.8,\n        height: 0,\n        ease: \"power3.inOut\",\n        stagger: {\n          amount: 0.07,\n        },\n      });\n      gsap.to(menu, {\n        duration: 1,\n        css: { display: \"none\" },\n      });\n    } else if (\n      state.clicked === true ||\n      (state.clicked === true && state.initial === null)\n    ) {\n      // open our menu\n      gsap.to(menu, {\n        duration: 0,\n        css: { display: \"block\" },\n      });\n      gsap.to([revealMenuBackground, revealMenu], {\n        duration: 0,\n        opacity: 1,\n        height: \"100%\",\n      });\n      staggerReveal(revealMenuBackground, revealMenu);\n      fadeInUp(info);\n      staggerText(line1, line2, line3);\n    }\n  }, [state]);\n\n  const staggerReveal = (node1, node2) => {\n    gsap.from([node1, node2], {\n      duration: 0.8,\n      height: 0,\n      transformOrigin: \"right top\",\n      skewY: 2,\n      ease: \"power3.inOut\",\n      stagger: {\n        amount: 0.1,\n      },\n    });\n  };\n\n  const staggerText = (node1, node2, node3) => {\n    gsap.from([node1, node2, node3], {\n      duration: 0.8,\n      y: 100,\n      delay: 0.1,\n      ease: \"power3.inOut\",\n      stagger: {\n        amount: 0.3,\n      },\n    });\n  };\n\n  const fadeInUp = (node) => {\n    gsap.from([node], {\n      y: 60,\n      duration: 1,\n      delay: 0.1,\n      opacity: 0,\n      ease: \"power3.inOut\",\n    });\n  };\n\n  const handleCity = (city) => {\n    gsap.to(cityBackground, {\n      duration: 0,\n      background: `url(${city}) center center`,\n    });\n    gsap.to(cityBackground, {\n      duration: 0.4,\n      opacity: 1,\n      ease: \"power3.inOut\",\n    });\n    gsap.from(cityBackground, {\n      duration: 0.4,\n      skewY: 2,\n      transformOrigin: \"right top\",\n    });\n  };\n\n  const handleCityReturn = () => {\n    gsap.to(cityBackground, {\n      duration: 0.4,\n      opacity: 0,\n    });\n  };\n\n  const handleHover = (e) => {\n    gsap.to(e.target, {\n      duration: 0.3,\n      y: 3,\n      skewX: 4,\n      ease: \"power3.inOut\",\n    });\n  };\n\n  const handleHoverExit = (e) => {\n    gsap.to(e.target, {\n      duration: 0.3,\n      y: -3,\n      skewX: 0,\n      ease: \"power3.inOut\",\n    });\n  };\n\n  return (\n    <div ref={(el) => (menu = el)} className=\"hamburger-menu\">\n      <div\n        ref={(el) => (revealMenuBackground = el)}\n        className=\"menu-secondary-background-color\"\n      ></div>\n      <div ref={(el) => (revealMenu = el)} className=\"menu-layer\">\n        <div\n          ref={(el) => (cityBackground = el)}\n          className=\"menu-city-background\"\n        ></div>\n        <div className=\"container\">\n          <div className=\"wrapper\">\n            <div className=\"menu-links\">\n              <nav>\n                <ul>\n                  <li>\n                    <Link\n                      onMouseEnter={(e) => handleHover(e)}\n                      onMouseOut={(e) => handleHoverExit(e)}\n                      ref={(el) => (line1 = el)}\n                      to=\"/opportunities\"\n                    >\n                      Opportunities\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      onMouseEnter={(e) => handleHover(e)}\n                      onMouseOut={(e) => handleHoverExit(e)}\n                      ref={(el) => (line2 = el)}\n                      to=\"/solutions\"\n                    >\n                      Solutions\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      onMouseEnter={(e) => handleHover(e)}\n                      onMouseOut={(e) => handleHoverExit(e)}\n                      ref={(el) => (line3 = el)}\n                      to=\"/contact-us\"\n                    >\n                      Contact us\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n              <div ref={(el) => (info = el)} className=\"info\">\n                <h3>Our Promise</h3>\n                <p>\n                  Everyday carry gastropub affogato 3 wolf moon chicharrones\n                  street art iceland DIY godard adaptogen wayfarers roof party\n                  jean shorts. XOXO YOLO celiac sriracha health goth\n                  lumbersexual four loko kale chips art party locavore.\n                </p>\n              </div>\n              <div className=\"locations\">\n                Locations:\n                {cities.map((el) => (\n                  <span\n                    key={el.name}\n                    onMouseEnter={() => handleCity(el.image)}\n                    onMouseOut={handleCityReturn}\n                  >\n                    {el.name}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Hamburger;\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Hamburger from \"./Hamburger\";\n\nconst Header = ({ history }) => {\n  const [state, setState] = useState({\n    initial: false,\n    clicked: null,\n    menuName: \"Menu\",\n  });\n  //State for disabled button\n  const [disabled, setDisabled] = useState(false);\n\n  //Use effect for page changes\n  useEffect(() => {\n    //listen for page changes\n    history.listen(() => {\n      setState({ clicked: false, menuName: \"Menu\" });\n    });\n  });\n\n  const handleMenu = () => {\n    disabledMenu();\n    if (state.initial === false) {\n      setState({\n        initial: null,\n        clicked: true,\n        menuName: \"Close\",\n      });\n    } else if (state.clicked === true) {\n      setState({\n        clicked: !state.clicked,\n        menuName: \"Menu\",\n      });\n    } else if (state.clicked === false) {\n      setState({\n        clicked: !state.clicked,\n        menuName: \"Close\",\n      });\n    }\n  };\n\n  //Determine if our menu button should be disabled\n  const disabledMenu = () => {\n    setDisabled(!disabled);\n    setTimeout(() => {\n      setDisabled(false);\n    }, 1200);\n  };\n\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <div className=\"inner-header\">\n            <div className=\"logo\">\n              <Link to=\"/home\">HAMBRG.</Link>\n            </div>\n            <div className=\"menu\">\n              <button disabled={disabled} onClick={handleMenu}>\n                Menu\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Hamburger state={state} />\n    </header>\n  );\n};\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport \"./App.scss\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"container\">\n          <div className=\"wrapper\">\n            <div className=\"home\">\n              <Switch>\n                <Route exact path=\"/home\" component={Home} />\n                <Route exact path=\"/opportunities\" component={Opportunities} />\n                <Route exact path=\"/solutions\" component={Solutions} />\n                <Route exact path=\"/contact-us\" component={Contact} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nfunction Opportunities() {\n  return <p>Discover our numerous opportunities</p>;\n}\n\nfunction Solutions() {\n  return <p>Solutions that help you.</p>;\n}\n\nfunction Contact() {\n  return <p>Feel free to reach us.</p>;\n}\n\nfunction Home() {\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <h5>\n          The <b>HAMBRG</b>, is a creative, engineer driven, global agency\n          working on advancing the software, advertising and design communities\n          to new heights.\n        </h5>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}